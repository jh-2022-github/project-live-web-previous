<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.onlive.common.mapper.LoginMapper" >

     <resultMap id="userLogin" type="com.onlive.common.vo.UserVo" >
        <result property="userId"       column="USER_ID"        jdbcType="VARCHAR"/>
        <result property="userPw"       column="USER_PW"        jdbcType="VARCHAR"/>
        <result property="userUname"     column="USER_UNAME"      jdbcType="VARCHAR"/>
        <result property="userNickname" column="USER_NICKNAME"  jdbcType="VARCHAR"/>
        <result property="userPhone"    column="USER_PHONE"  jdbcType="VARCHAR"/>
        <result property="userRole"     column="USER_ROLE"      jdbcType="VARCHAR"/>
        <result property="selName"     column="SEL_NAME"/>
        <association property ="withdrawVo" resultMap="withdrawVo" />
     </resultMap>
    <resultMap id="withdrawVo" type="com.onlive.common.vo.UserVo$WithdrawVo">
        <result property="userWithdrawYn" column="USER_WITHDRAW_YN" />
    </resultMap>
    
    <select id="getUserLogin" parameterType="String" resultMap ="userLogin">
        /*LoginMapper.getUserLogin*/
        SELECT UI.USER_ID
              ,UI.USER_PW
              ,UI.USER_UNAME
              ,UI.USER_NICKNAME
              ,UI.USER_PHONE
              ,UI.USER_ROLE
              ,UI.USER_WITHDRAW_YN
              ,SI.SEL_NAME
        FROM  USER_INFO UI
        LEFT  JOIN SELLER_INFO SI 
	      ON  USER_ID = SEL_ID
        WHERE USER_ID = #{userId}
    </select>
    <insert id="insertUser" parameterType="com.onlive.common.vo.UserVo">
	    /*LoginMapper.insertUser*/
	    INSERT INTO USER_INFO
	        (USER_ID
	        ,USER_PW
	        ,USER_UNAME
	        ,USER_NICKNAME
	        ,USER_PHONE
	        ,USER_PLATFORM
	        ,USER_ROLE
        )VALUES(
            #{userId}
            ,#{userPw}
	        ,#{userUname}
	        ,#{userNickname}
	        ,#{userPhone}
		    ,#{signUpVo.userPlatform}
		    ,#{userRole}
        )
    </insert>
    
    <select id="searchId" parameterType="String" resultType="int">
        /* LoginMapper.searchId */
        SELECT  COUNT(USER_ID)
        FROM    USER_INFO
        WHERE   UPPER(USER_ID) = UPPER(#{userId})
    </select>
    <select id="searchPhone" parameterType="String" resultType="int">
        /*LoginMapper.searchPhone*/
        SELECT  COUNT(USER_PHONE)
        FROM    USER_INFO
        WHERE   USER_PHONE = #{userPhone}
    </select>
    <select id="findIdInt" parameterType="com.onlive.common.vo.UserVo" resultType="int">
        /*LoginMapper.findIdInt*/
        SELECT  COUNT(USER_ID)
        FROM    USER_INFO
        WHERE   USER_UNAME = #{userUname}
            AND USER_PHONE= #{userPhone}
    </select>
    <select id="findId" parameterType="com.onlive.common.vo.UserVo" resultType="hashMap">
        /*LoginMapper.findId*/
        SELECT 
            RPAD(SUBSTR(sub.userId,1,LENGTH(sub.userId)/2),LENGTH(sub.userId),'*') AS userId
            ,sub.email AS userEmail
        FROM(   SELECT  USER_ID
                        ,SUBSTR(USER_ID,1,INSTR(USER_ID,'@')-1) AS userId 
                        ,SUBSTR(USER_ID,INSTR(USER_ID,'@')+1) AS email 
                FROM    USER_INFO 
                WHERE   USER_UNAME = #{userUname}
                    AND USER_PHONE = #{userPhone}) sub
    </select>
    <select id="checkPw" parameterType="com.onlive.common.vo.UserVo" resultType="String">
        /*LoginMapper.checkPw*/
        SELECT  USER_PW
        FROM    USER_INFO
        WHERE   USER_ID = #{userId} 
            <!-- AND USER_PW = #{userPw} -->
    </select>
    <update id="resetPw" parameterType="com.onlive.common.vo.UserVo">
        /*LoginMapper.resetPw*/
        UPDATE  USER_INFO
        SET     USER_PW = #{userPw}
        WHERE   USER_ID = #{userId}
    </update>
    <select id="searchNickname" parameterType="String" resultType="int">
        /*LoginMapper.searchNickname*/
        SELECT  COUNT(USER_NICKNAME)
        FROM    USER_INFO
        WHERE   UPPER(USER_NICKNAME) = UPPER(#{userNickname})
    </select>
    <update id="updateUserInfo" parameterType="com.onlive.common.vo.UserVo">
        /*LoginMapper.updateUserInfo*/
        UPDATE  USER_INFO 
        SET     USER_NICKNAME = #{userNickname}
                , USER_PHONE = #{userPhone}
                , USER_POSTCODE = #{userPostcode}
                , USER_ROADADDR = #{userRoadaddr}
                , USER_DETAILADDR = #{userDetailaddr}
                , USER_EMAIL = #{userEmail}
        WEHER   USER_ID = #{userId}
    </update>
    
    <update id="updateUserPw" parameterType="String" >
        /*LoginMapper.updateUserPw*/
        UPDATE  USER_INFO
        SET     USER_PW = #{userPw}
        WEHER   USER_ID = #{userId}    
    </update>
    <select id="countBySelNameCheck" parameterType="String" resultType="int">
        /*LoginMapper.countBySelNameCheck*/
        SELECT  COUNT(SEL_NAME) 
        FROM    SELLER_INFO 
        WHERE   SEL_NAME = '%${selName}%';
    </select>
    <insert id="insertSellerInfo" parameterType="com.onlive.common.vo.SellerVo">
        /*LoginMapper.insertSellerInfo*/
        INSERT INTO SELLER_INFO
	        (SEL_ID
	        , SEL_CODE
	        , SEL_CP_NAME
	        , SEL_NAME
	        , FILE_ID
        )VALUES(
            #{selId}
            ,#{selCpName}
            ,#{selCode}
            ,#{selName}
            ,#{fileId}
        )
    </insert>
    <insert id="setStreamKey" parameterType="com.onlive.common.vo.SellerVo$SellerLiveVo">
        /*LoginMapper.insertSellerInfo*/
        INSERT INTO STREAMKEY
            (SEL_ID
            ,SEL_STREAM_KEY
            ,SEL_CHAT_KEY
        )VALUES(
            #{selId}
            ,#{selStreamKey}
            ,#{selChatKey}
        )
    </insert>
    <update id="updateUserRole" parameterType="com.onlive.common.vo.SellerVo" >
        /*LoginMapper.updateUserRole*/
        UPDATE USER_INFO
        SET    USER_ROLE =#{selRole}
        WHERE  USER_ID = #{selId}
    </update>
</mapper>